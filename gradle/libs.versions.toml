# Note: libby can't download/load `-SNAPSHOT` dependencies

[versions]
# core
kotlin = "2.1.0"
kotlin-poet = "1.17.0"
snakeyaml = "2.2"
cloud = "2.0.0"
cloud-platform = "2.0.0-beta.10"
annotations = "26.0.2"
#cloud-minecraft = "2.0.2-SNAPSHOT"
geantyref = "2.0.1"
adventure = "4.19.0"
adventure-option = "1.1.0"
examination = "1.3.0"
mysql-connector = "8.4.0"
sqlite-jdbc = "3.46.0.0"
h2 = "2.2.224"
mariadb = "3.3.3"
jedis = "5.0.0"
reflections = "0.10.2"
hikari = "5.1.0"
guava = "31.1-jre"
gson = "2.11.0"
auto-service-annotations = "1.0.1"
kotlin-reflect = "2.1.0"
netty = "4.1.111.Final"
exposed = "0.53.0"
libby = "2.0.0-SNAPSHOT"
light = "1.0.0-SNAPSHOT"
mccoroutines = "2.20.0"
kotlinx-coroutines = "1.9.0-RC.2"
caffeine = "3.2.0"

# minecraft
adventure-platform = "4.3.4"

# bukkit
paper = "1.21-R0.1-SNAPSHOT"
folia = "1.20.4-R0.1-SNAPSHOT"
inventoryframework = "0.10.19"
xseries = "13.0.0"
pathetic-pathfinder-bukkit = "2.4.6"
authlib = "6.0.54"
skinsrestorer-api = "15.3.1"
placeholderapi = "2.11.6"

# bukkit - nms
takenaka = "1.2.2"

# proxy - velocity
velocity = "3.3.0-SNAPSHOT"

# proxy - bungeecord
bungeecord = "1.19-R0.1-SNAPSHOT"

[libraries]
# core
kotlin = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlin-poet-kotlin = { group = "com.squareup", name = "kotlinpoet", version.ref = "kotlin-poet" }
kotlin-poet-java = { group = "com.squareup", name = "kotlinpoet-javapoet", version.ref = "kotlin-poet" }
annotations = { group = "org.jetbrains", name = "annotations", version.ref = "annotations" } # transitive for adventure-platform-bukkit -- non-final
snakeyaml = { group = "org.yaml", name = "snakeyaml", version.ref = "snakeyaml" }
cloud-services = { group = "org.incendo", name = "cloud-services", version.ref = "cloud" } # transitive for cloud-core
cloud-core = { group = "org.incendo", name = "cloud-core", version.ref = "cloud" }
cloud-kotlin-extensions = { group = "org.incendo", name = "cloud-kotlin-extensions", version.ref = "cloud" }
adventure-api = { group = "net.kyori", name = "adventure-api", version.ref = "adventure" }
examination-api = { group = "net.kyori", name = "examination-api", version.ref = "examination" } # transitive for adventure-api
examination-string = { group = "net.kyori", name = "examination-string", version.ref = "examination" } # transitive for adventure-api
adventure-key = { group = "net.kyori", name = "adventure-key", version.ref = "adventure" } # transitive for adventure-platform-bukkit
geantyref = { group = "io.leangen.geantyref", name = "geantyref", version.ref = "geantyref" }
adventure-text-minimessage = { group = "net.kyori", name = "adventure-text-minimessage", version.ref = "adventure" }
adventure-text-serializer-gson = { group = "net.kyori", name = "adventure-text-serializer-gson", version.ref = "adventure" }
adventure-text-serializer-json = { group = "net.kyori", name = "adventure-text-serializer-json", version.ref = "adventure" } # transitive for adventure gson -- non-final
adventure-text-serializer-gson-legacy-impl = { group = "net.kyori", name = "adventure-text-serializer-gson-legacy-impl", version.ref = "adventure" } # transitive for adventure platform bukkit -- non-final
adventure-option = { group = "net.kyori", name = "option", version.ref = "adventure-option" } # transitive for adventure json serializer -- non-final
mysql-connector = { group = "com.mysql", name = "mysql-connector-j", version.ref = "mysql-connector" }
sqlite-jdbc = { group = "org.xerial", name = "sqlite-jdbc", version.ref = "sqlite-jdbc" }
h2 = { group = "com.h2database", name = "h2", version.ref = "h2" }
mariadb = { group = "org.mariadb.jdbc", name = "mariadb-java-client", version.ref = "mariadb" }
jedis = { group = "redis.clients", name = "jedis", version.ref = "jedis" }
reflections = { group = "org.reflections", name = "reflections", version.ref = "reflections" }
hikari = { group = "com.zaxxer", name = "HikariCP", version.ref = "hikari" }
guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
auto-service-annotations = { group = "com.google.auto.service", name = "auto-service-annotations", version.ref = "auto-service-annotations" } # transitive for adventure gson serializer -- non-final
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin-reflect" }
netty-all = { group = "io.netty", name = "netty-all", version.ref = "netty" }
exposed-core = { group = "org.jetbrains.exposed", name = "exposed-core", version.ref = "exposed" }
exposed-jdbc = { group = "org.jetbrains.exposed", name = "exposed-jdbc",version.ref = "exposed" }
exposed-dao = { group = "org.jetbrains.exposed", name = "exposed-dao",version.ref = "exposed" }
exposed-kotlin-datetime = { group = "org.jetbrains.exposed", name = "exposed-kotlin-datetime",version.ref = "exposed" }
light = { group = "org.sayandev", name = "light-core", version.ref = "light" }
libby = { group = "com.alessiodp.libby", name = "libby-core", version.ref = "libby" }
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine" }
adventure-platform-api = { group = "net.kyori", name = "adventure-platform-api", version.ref = "adventure-platform" } # transitive for adventure platforms
adventure-platform-facet = { group = "net.kyori", name = "adventure-platform-facet", version.ref = "adventure-platform" } # transitive for adventure platforms

# bukkit
paper = { group = "io.papermc.paper", name = "paper-api", version.ref = "paper" }
folia = { group = "dev.folia", name = "folia-api", version.ref = "folia" }
cloud-brigadier = { group = "org.incendo", name = "cloud-brigadier", version.ref = "cloud-platform" } # transitive for cloud bukkit
cloud-bukkit = { group = "org.incendo", name = "cloud-bukkit", version.ref = "cloud-platform" } # transitive for cloud paper
cloud-paper = { group = "org.incendo", name = "cloud-paper", version.ref = "cloud-platform" }
cloud-kotlin-coroutines = { group = "org.incendo", name = "cloud-kotlin-coroutines", version.ref = "cloud" }
cloud-minecraft-extras = { group = "org.incendo", name = "cloud-minecraft-extras", version.ref = "cloud-platform" }
inventoryframework = { group = "com.github.stefvanschie.inventoryframework", name = "IF", version.ref = "inventoryframework" }
xseries = { group = "com.github.cryptomorin", name = "XSeries", version.ref = "xseries" }
adventure-platform-bukkit = { group = "net.kyori", name = "adventure-platform-bukkit", version.ref = "adventure-platform" }
adventure-nbt = { group = "net.kyori", name = "adventure-nbt", version.ref = "adventure" } # transitive for adventure platform bukkit
adventure-platform-viaversion = { group = "net.kyori", name = "adventure-platform-viaversion", version.ref = "adventure-platform" } # transitive for adventure platform -- non-final
adventure-text-serializer-bungeecord = { group = "net.kyori", name = "adventure-text-serializer-bungeecord", version.ref = "adventure-platform" } # transitive for adventure platform -- non-final
adventure-text-serializer-legacy = { group = "net.kyori", name = "adventure-text-serializer-legacy", version.ref = "adventure" }
light-minecraft-bukkit = { group = "org.sayandev", name = "light-minecraft-bukkit", version.ref = "light" }
libby-bukkit = { group = "com.alessiodp.libby", name = "libby-bukkit", version.ref = "libby" }
libby-paper = { group = "com.alessiodp.libby", name = "libby-paper", version.ref = "libby" }
pathetic-pathfinder-bukkit = { group = "com.github.patheloper.pathetic", name = "pathetic-mapping", version.ref = "pathetic-pathfinder-bukkit" }
authlib = { group = "com.mojang", name = "authlib", version.ref = "authlib" }
placeholderapi = { group = "me.clip", name = "placeholderapi", version.ref = "placeholderapi" }
skinsrestorer-api = { group = "net.skinsrestorer", name = "skinsrestorer-api", version.ref = "skinsrestorer-api" }
mccoroutines-bukkit-api = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-bukkit-api", version.ref = "mccoroutines" }
mccoroutines-bukkit-core = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-bukkit-core", version.ref = "mccoroutines" }
mccoroutines-folia-api = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-folia-api", version.ref = "mccoroutines" }
mccoroutines-folia-core = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-folia-core", version.ref = "mccoroutines" }

# bukkit - nms
takenaka = { group = "me.kcra.takenaka", name = "generator-accessor-runtime", version.ref = "takenaka" }

# proxy - velocity
velocity = { group = "com.velocitypowered", name = "velocity-api", version.ref = "velocity" }
libby-velocity = { group = "com.alessiodp.libby", name = "libby-velocity", version.ref = "libby" }
mccoroutines-velocity-api = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-velocity-api", version.ref = "mccoroutines" }
mccoroutines-velocity-core = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-velocity-core", version.ref = "mccoroutines" }
cloud-velocity = { group = "org.incendo", name = "cloud-velocity", version.ref = "cloud-platform" }

# proxy - bungeecord
bungeecord = { group = "net.md-5", name = "bungeecord-api", version.ref = "bungeecord" }
adventure-platform-bungeecord = { group = "net.kyori", name = "adventure-platform-bungeecord", version.ref = "adventure-platform" }
libby-bungee = { group = "com.alessiodp.libby", name = "libby-bungee", version.ref = "libby" }
mccoroutines-bungeecord-api = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-bungeecord-api", version.ref = "mccoroutines" }
mccoroutines-bungeecord-core = { group = "com.github.shynixn.mccoroutine", name = "mccoroutine-bungeecord-core", version.ref = "mccoroutines" }

[plugins]
takenaka = { id = "me.kcra.takenaka.accessor", version.ref = "takenaka" }

[bundles]
# implementation modules
implementation-loader = [
    "kotlin-poet-java",
    "kotlin-poet-kotlin"
]
implementation-core = [
    "kotlin",
    "annotations",
    "cloud-services",
    "cloud-core",
    "cloud-kotlin-extensions",
    #    "cloud-kotlin-coroutines",
    "geantyref",
    "adventure-api",
    "examination-api",
    "examination-string",
    "adventure-key",
    "adventure-platform-api",
    "adventure-platform-facet",
    "adventure-text-minimessage",
    "adventure-text-serializer-gson",
    "adventure-text-serializer-json",
    "adventure-text-serializer-gson-legacy-impl",
    "adventure-option",
    "reflections",
    "kotlin-reflect",
    "hikari",
#    "gson",
    "auto-service-annotations", # transitive for adventure gson serializer -- non-final
    "exposed-core",
    "exposed-jdbc",
    "exposed-dao",
    "exposed-kotlin-datetime",
    "kotlinx-coroutines",
    "mysql-connector",
    "sqlite-jdbc",
#    "h2",
    "mariadb",
    "jedis",
#    "caffeine"
]
implementation-bukkit = [
    "cloud-brigadier",
    "cloud-bukkit",
    "cloud-paper",
    "cloud-minecraft-extras",
    "inventoryframework",
    "xseries",
    "adventure-text-serializer-legacy",
    "adventure-platform-bukkit",
    "adventure-nbt",
    "adventure-platform-viaversion",
    "adventure-text-serializer-bungeecord",
    "pathetic-pathfinder-bukkit",
    "mccoroutines-bukkit-api",
    "mccoroutines-bukkit-core",
    "mccoroutines-folia-api",
    "mccoroutines-folia-core",
]
implementation-bukkit-nms = [
    "takenaka",
]
implementation-proxy = [
]
implementation-proxy-velocity = [
#    MCCoroutine velocity dependencies are shaded into velocity itself
#    "mccoroutines-velocity-api",
#    "mccoroutines-velocity-core",
    "cloud-velocity"
]
implementation-proxy-bungeecord = [
    "adventure-platform-bungeecord",
    "mccoroutines-bungeecord-api",
    "mccoroutines-bungeecord-core",
]